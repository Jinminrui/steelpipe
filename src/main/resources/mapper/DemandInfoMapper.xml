<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.nuist.jmr.steelpipe.dao.DemandInfoMapper" >
  <resultMap id="BaseResultMap" type="com.nuist.jmr.steelpipe.entity.DemandInfo" >
    <id column="pk_id" property="pkId" jdbcType="INTEGER" />
    <result column="product_type_id" property="productTypeId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="demand_num" property="demandNum" jdbcType="INTEGER" />
    <result column="province" property="province" jdbcType="VARCHAR" />
    <result column="city" property="city" jdbcType="VARCHAR" />
    <result column="demand_from" property="demandFrom" jdbcType="INTEGER" />
    <result column="demand_desc" property="demandDesc" jdbcType="VARCHAR" />
    <result column="is_confirmed" property="isConfirmed" jdbcType="INTEGER" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    pk_id, product_type_id, product_name, demand_num, province, city, demand_from, demand_desc, 
    is_confirmed, gmt_create, gmt_modified
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.nuist.jmr.steelpipe.entity.DemandInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tb_demand_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from tb_demand_info
    where pk_id = #{pkId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from tb_demand_info
    where pk_id = #{pkId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nuist.jmr.steelpipe.entity.DemandInfo" useGeneratedKeys="true" keyProperty="pkId" >
    insert into tb_demand_info (product_type_id, product_name, demand_num, 
      province, city, demand_from, 
      demand_desc, is_confirmed, gmt_create, 
      gmt_modified)
    values (#{productTypeId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{demandNum,jdbcType=INTEGER}, 
      #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, #{demandFrom,jdbcType=INTEGER}, 
      #{demandDesc,jdbcType=VARCHAR}, #{isConfirmed,jdbcType=INTEGER}, #{gmtCreate,jdbcType=TIMESTAMP}, 
      #{gmtModified,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.nuist.jmr.steelpipe.entity.DemandInfo" useGeneratedKeys="true" keyProperty="pkId" >
    insert into tb_demand_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productTypeId != null" >
        product_type_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="demandNum != null" >
        demand_num,
      </if>
      <if test="province != null" >
        province,
      </if>
      <if test="city != null" >
        city,
      </if>
      <if test="demandFrom != null" >
        demand_from,
      </if>
      <if test="demandDesc != null" >
        demand_desc,
      </if>
      <if test="isConfirmed != null" >
        is_confirmed,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productTypeId != null" >
        #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="demandNum != null" >
        #{demandNum,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="demandFrom != null" >
        #{demandFrom,jdbcType=INTEGER},
      </if>
      <if test="demandDesc != null" >
        #{demandDesc,jdbcType=VARCHAR},
      </if>
      <if test="isConfirmed != null" >
        #{isConfirmed,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nuist.jmr.steelpipe.entity.DemandInfo" >
    update tb_demand_info
    <set >
      <if test="productTypeId != null" >
        product_type_id = #{productTypeId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="demandNum != null" >
        demand_num = #{demandNum,jdbcType=INTEGER},
      </if>
      <if test="province != null" >
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null" >
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="demandFrom != null" >
        demand_from = #{demandFrom,jdbcType=INTEGER},
      </if>
      <if test="demandDesc != null" >
        demand_desc = #{demandDesc,jdbcType=VARCHAR},
      </if>
      <if test="isConfirmed != null" >
        is_confirmed = #{isConfirmed,jdbcType=INTEGER},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nuist.jmr.steelpipe.entity.DemandInfo" >
    update tb_demand_info
    set product_type_id = #{productTypeId,jdbcType=INTEGER},
      product_name = #{productName,jdbcType=VARCHAR},
      demand_num = #{demandNum,jdbcType=INTEGER},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      demand_from = #{demandFrom,jdbcType=INTEGER},
      demand_desc = #{demandDesc,jdbcType=VARCHAR},
      is_confirmed = #{isConfirmed,jdbcType=INTEGER},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
    where pk_id = #{pkId,jdbcType=INTEGER}
  </update>
</mapper>